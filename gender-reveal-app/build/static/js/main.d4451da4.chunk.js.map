{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["popSound","Audio","process","App","balloons","setBalloons","useState","array","i","length","j","Math","floor","random","shuffleArray","id","isBoy","popped","revealed","setRevealed","gender","setGender","isClickable","setIsClickable","React","createElement","className","map","balloon","key","onClick","handlePop","play","updatedBalloons","Fragment","Confetti","width","window","innerWidth","height","innerHeight","numberOfPieces","recycle","gravity","initialVelocityY","src","alt","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"gPAKA,MAAMA,EAAW,IAAIC,MAAMC,0BA8FZC,MAnFf,WACC,MAOOC,EAAUC,GAAeC,mBAhBXC,KACrB,IAAK,IAAIC,EAAID,EAAME,OAAS,EAAGD,EAAI,EAAGA,IAAK,CAC1C,MAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,KACzCD,EAAMC,GAAID,EAAMG,IAAM,CAACH,EAAMG,GAAIH,EAAMC,IAEzC,OAAOD,GAWkCO,CAPjB,CACvB,CAAEC,GAAI,EAAGC,OAAO,EAAOC,QAAQ,GAC/B,CAAEF,GAAI,EAAGC,OAAO,EAAOC,QAAQ,GAC/B,CAAEF,GAAI,EAAGC,OAAO,EAAOC,QAAQ,GAC/B,CAAEF,GAAI,EAAGC,OAAO,EAAMC,QAAQ,OAIxBC,EAAUC,GAAeb,oBAAS,IAClCc,EAAQC,GAAaf,mBAAS,OAC9BgB,EAAaC,GAAkBjB,oBAAS,GAqB/C,OACCkB,IAAAC,cAAA,OAAKC,UAAU,OACdF,IAAAC,cAAA,UAAQC,UAAU,cACjBF,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAG,8BACHD,IAAAC,cAAA,OAAKC,UAAU,sBACbtB,EAASuB,IACRC,IACCA,EAAQX,QACRO,IAAAC,cAAA,OACCI,IAAKD,EAAQb,GACbW,UAAW,YAAWE,EAAQX,OAAS,SAAW,IAClDa,QACCR,EACG,IAjCMS,EAACf,EAAOD,KAEzBf,EAASgC,OAGT,MAAMC,EAAkB7B,EAASuB,IAAKC,GACrCA,EAAQb,KAAOA,EAAK,IAAKa,EAASX,QAAQ,GAASW,GAGpDvB,EAAY4B,GACZd,GAAY,GACZE,EAAUL,EAAQ,MAAQ,cAGtBA,GACHO,GAAe,IAkBCQ,CAAUH,EAAQZ,MAAOY,EAAQb,IACvC,MAEJ,kBAMJG,GACAM,IAAAC,cAAA,OAAKC,UAAU,kBACF,QAAXN,GACAI,IAAAC,cAAAD,IAAAU,SAAA,KACCV,IAAAC,cAACU,IAAQ,CACRC,MAAOC,OAAOC,WACdC,OAAQF,OAAOG,YACfC,eAAgB,IAChBC,SAAS,EACTC,QAAS,GACTC,iBAAkB,KAChB,IAEHpB,IAAAC,cAAA,OACCoB,IAAK,+BACLC,IAAI,cACJpB,UAAU,kBAID,eAAXN,GAA2BI,IAAAC,cAAA,SAAG,6BC/EtBsB,MAZSC,IAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,KAAKC,IAAkD,IAAjD,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,OAAEC,EAAM,QAAEC,GAASL,EACpEC,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDDS,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHrC,IAAAC,cAACD,IAAMsC,WAAU,KACftC,IAAAC,cAACtB,EAAG,QAOR4C,K","file":"static/js/main.d4451da4.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Confetti from \"react-confetti\"; // Import the Confetti component\nimport \"./App.css\"; // Make sure you have the styles in App.css\n\n// Balloon sound file path\nconst popSound = new Audio(process.env.PUBLIC_URL + \"/pop.mp3\");\n\n// Function to shuffle the array\nconst shuffleArray = (array) => {\n\tfor (let i = array.length - 1; i > 0; i--) {\n\t\tconst j = Math.floor(Math.random() * (i + 1));\n\t\t[array[i], array[j]] = [array[j], array[i]];\n\t}\n\treturn array;\n};\n\nfunction App() {\n\tconst initialBalloons = [\n\t\t{ id: 1, isBoy: false, popped: false },\n\t\t{ id: 2, isBoy: false, popped: false },\n\t\t{ id: 3, isBoy: false, popped: false },\n\t\t{ id: 4, isBoy: true, popped: false }, // This balloon reveals the boy gender\n\t];\n\n\tconst [balloons, setBalloons] = useState(shuffleArray(initialBalloons)); // Shuffle on initialization\n\tconst [revealed, setRevealed] = useState(false);\n\tconst [gender, setGender] = useState(null);\n\tconst [isClickable, setIsClickable] = useState(true); // State to track if balloons are clickable\n\n\tconst handlePop = (isBoy, id) => {\n\t\t// Play sound\n\t\tpopSound.play();\n\n\t\t// Update balloon state to mark as popped\n\t\tconst updatedBalloons = balloons.map((balloon) =>\n\t\t\tballoon.id === id ? { ...balloon, popped: true } : balloon\n\t\t);\n\n\t\tsetBalloons(updatedBalloons); // Update the balloons state\n\t\tsetRevealed(true);\n\t\tsetGender(isBoy ? \"Boy\" : \"Try again!\");\n\n\t\t// Disable clicking if the popped balloon reveals the boy gender\n\t\tif (isBoy) {\n\t\t\tsetIsClickable(false); // Disable further clicks on remaining balloons\n\t\t}\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<header className=\"app-header\">\n\t\t\t\t<h1>Gender Reveal Game</h1>\n\t\t\t\t<p>Pop a balloon to find out!</p>\n\t\t\t\t<div className=\"balloons-container\">\n\t\t\t\t\t{balloons.map(\n\t\t\t\t\t\t(balloon) =>\n\t\t\t\t\t\t\t!balloon.popped && ( // Only show balloons that haven't been popped\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tkey={balloon.id}\n\t\t\t\t\t\t\t\t\tclassName={`balloon ${balloon.popped ? \"popped\" : \"\"}`}\n\t\t\t\t\t\t\t\t\tonClick={\n\t\t\t\t\t\t\t\t\t\tisClickable\n\t\t\t\t\t\t\t\t\t\t\t? () => handlePop(balloon.isBoy, balloon.id)\n\t\t\t\t\t\t\t\t\t\t\t: null\n\t\t\t\t\t\t\t\t\t} // Disable clicking if not clickable\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tðŸŽˆ\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{revealed && (\n\t\t\t\t\t<div className=\"reveal-message\">\n\t\t\t\t\t\t{gender === \"Boy\" && (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<Confetti\n\t\t\t\t\t\t\t\t\twidth={window.innerWidth}\n\t\t\t\t\t\t\t\t\theight={window.innerHeight}\n\t\t\t\t\t\t\t\t\tnumberOfPieces={800} // Increase density\n\t\t\t\t\t\t\t\t\trecycle={false} // Prevent recycling for a one-time effect\n\t\t\t\t\t\t\t\t\tgravity={0.2} // Faster falling confetti\n\t\t\t\t\t\t\t\t\tinitialVelocityY={10} // Shoot confetti up faster\n\t\t\t\t\t\t\t\t/>{\" \"}\n\t\t\t\t\t\t\t\t{/* Add confetti effect */}\n\t\t\t\t\t\t\t\t<img\n\t\t\t\t\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/its-a-boy.png`}\n\t\t\t\t\t\t\t\t\talt=\"It's a boy!\"\n\t\t\t\t\t\t\t\t\tclassName=\"gender-image\"\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t\t{gender === \"Try again!\" && <p>Pick another balloon!</p>}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}